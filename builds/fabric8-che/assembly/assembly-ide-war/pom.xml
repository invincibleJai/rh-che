<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2012-2016 Codenvy, S.A. All rights reserved. This program 
    and the accompanying materials are made available under the terms of the 
    Eclipse Public License v1.0 which accompanies this distribution, and is available 
    at http://www.eclipse.org/legal/epl-v10.html Contributors: Codenvy, S.A. 
    - initial API and implementation -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>fabric8-ide-assembly-parent</artifactId>
        <groupId>com.redhat.che</groupId>
        <version>@redhat.che.version@</version>
        <relativePath>..</relativePath>
    </parent>
    <artifactId>fabric8-ide-assembly-ide-war</artifactId>
    <packaging>war</packaging>
    <name>Fabric8 IDE :: Compiling GWT Application</name>
    <properties>
        <generated.sources.directory>${project.build.directory}/generated-sources/gen</generated.sources.directory>
        <gwt.log.enable>false</gwt.log.enable>
        <original-project-basedir>assembly/${original-project-name}</original-project-basedir>
        <original-project-name>assembly-ide-war</original-project-name>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                  <groupId>org.eclipse.m2e</groupId>
                  <artifactId>lifecycle-mapping</artifactId>
                  <configuration>
                    <lifecycleMappingMetadata>
                      <pluginExecutions>
                        <pluginExecution>
                          <pluginExecutionFilter>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>exec-maven-plugin</artifactId>
                            <versionRange>[1.4.0,)</versionRange>
                            <goals>
                              <goal>java</goal>
                            </goals>
                          </pluginExecutionFilter>
                          <action>
                            <ignore />
                          </action>
                        </pluginExecution>
                        <pluginExecution>
                          <pluginExecutionFilter>
                            <groupId>org.eclipse.che.core</groupId>
                            <artifactId>che-core-api-dto-maven-plugin</artifactId>
                            <versionRange>[4,)</versionRange>
                            <goals>
                              <goal>generate</goal>
                            </goals>
                          </pluginExecutionFilter>
                          <action>
                            <ignore />
                          </action>
                        </pluginExecution>
                      </pluginExecutions>
                    </lifecycleMappingMetadata>
                  </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-web-resources</id>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-patch-plugin</artifactId>
                <executions>
                    <execution>
                        <id>patch-sources</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Source Generator invocation -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>gwt-xml</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.eclipse.che.util.GwtXmlGenerator</mainClass>
                            <arguments>
                                <argument>--rootDir=${generated.sources.directory}</argument>
                                <argument>--loggingEnabled=${gwt.log.enable}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>extManager-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.eclipse.che.util.ExtensionManagerGenerator</mainClass>
                            <arguments>
                                <argument>--rootDir=${generated.sources.directory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>IDEInjector-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.eclipse.che.util.IDEInjectorGenerator</mainClass>
                            <arguments>
                                <argument>--rootDir=${generated.sources.directory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>DtoRegistry-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.eclipse.che.util.DtoFactoryVisitorRegistryGenerator</mainClass>
                            <arguments>
                                <argument>--rootDir=${generated.sources.directory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.che.core</groupId>
                <artifactId>che-core-dyna-provider-generator-maven-plugin</artifactId>
                <version>${che.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outputDirectory>${generated.sources.directory}</outputDirectory>
                </configuration>
            </plugin>
            <!-- GWT Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <!--<goal>test</goal> -->
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.google.gwt</groupId>
                        <artifactId>gwt-codeserver</artifactId>
                        <version>${com.google.gwt.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.google.gwt</groupId>
                        <artifactId>gwt-dev</artifactId>
                        <version>${com.google.gwt.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.google.gwt</groupId>
                        <artifactId>gwt-user</artifactId>
                        <version>${com.google.gwt.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath>
                    <extraJvmArgs>${gwt.compiler.extraJvmArgs}</extraJvmArgs>
                    <modules>
                        <module>org.eclipse.che.ide.IDE</module>
                    </modules>
                    <!-- don' remove it we will use it then need to found 
                        bug in compiled JS -->
                    <!--style>DETAILED</style -->
                    <logLevel>${gwt.compiler.logLevel}</logLevel>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-patch-files</id>
                        <phase>generate-sources</phase>
                    </execution>
                    <execution>
                        <id>copy-all-files</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="copy all original Che files">
                                <copy
                                    todir="${project.build.directory}/patched"
                                    verbose="true">
                                    <fileset
                                        dir="${baseCheRepository}/${original-project-basedir}">
                                        <include name="src/**" />
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>buildnumber</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo append="false"
                                    file="${project.build.directory}/classes/org/eclipse/che/ide/ext/help/client/BuildInfo.properties">revision = ${revision}
                                    buildTime = ${timestamp}
                                    version =
                                    ${project.version}</echo>
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>clean generated sources in assembly-ide-war</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- To bypass a problem in the build when 
                                    rebuilding without the clean option. -->
                                <delete verbose="true"
                                    dir="${project.build.directory}/generated-sources" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <packagingExcludes>%regex[WEB-INF\\lib\\(?!.*j2ee).*.jar]</packagingExcludes>
                    <attachClasses>true</attachClasses>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source-for-patched-files</id>
                        <phase>generate-sources</phase>
                    </execution>
                    <execution>
                        <id>add-resource-for-patched-files</id>
                        <phase>generate-sources</phase>
                    </execution>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${generated.sources.directory}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <timestampFormat>{0, date, yyyy-MM-dd HH:mm:ss}</timestampFormat>
                    <buildNumberPropertyName>revision</buildNumberPropertyName>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <shortRevisionLength>16</shortRevisionLength>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>withKeycloak</id>
            <activation>
                <property>
                    <name>withoutKeycloak</name>
                    <value>!true</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.redhat.che</groupId>
                    <artifactId>che-keycloak-plugin-ide</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>withoutKeycloak</id>
            <activation>
                <property>
                    <name>withoutKeycloak</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Remove Keycloak Patches</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target name="copy all original Che files">
                                        <delete
                                            verbose="true">
                                            <fileset
                                                dir="${project.build.directory}/prepared-patches">
                                                <include name="src.main.webapp.IDE.jsp.patch" />
                                                <include name="src.main.webapp.META-INF.context.xml.patch" />
                                                <include name="src.main.webapp.WEB-INF.web.xml.patch" />
                                            </fileset>
                                        </delete>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>withDashboard</id>
            <activation>
                <property>
                    <name>withoutDashboard</name>
                    <value>!true</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.eclipse.che</groupId>
                    <artifactId>assembly-ide-war</artifactId>
                    <type>pom</type>
                    <exclusions>
                        <exclusion>
                            <artifactId>che-plugin-svn-ext-ide</artifactId>
                            <groupId>org.eclipse.che.plugin</groupId>
                        </exclusion>
                    </exclusions>
                    
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>withoutDashboard</id>
            <activation>
                <property>
                    <name>withoutDashboard</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-src-without-dashboard</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <overwrite>true</overwrite>
                                    <outputDirectory>${project.build.directory}/patched/src</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src-without-dashboard/main</directory>
                                        </resource>
                                        <resource>
                                            <directory>src-without-dashboard/test</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.eclipse.che</groupId>
                    <artifactId>assembly-ide-war</artifactId>
                    <type>pom</type>
                    <exclusions>
                        <exclusion>
                            <artifactId>che-plugin-ext-dashboard-client</artifactId>
                            <groupId>org.eclipse.che.plugin</groupId>
                        </exclusion>
                        <exclusion>
                            <artifactId>che-plugin-svn-ext-ide</artifactId>
                            <groupId>org.eclipse.che.plugin</groupId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
